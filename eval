#!/usr/bin/env python3

from plumbum import FG, BG
from plumbum import local
import time


REQUESTS = 1
WRITER_REGIONS = [
  'eu',
]
READER_REGIONS = [
  'us',
  'sg',
]

POST_STORAGES = [
  'mysql',
  'dynamo',
  's3',
  'cache',
]
NOTIFICATION_STORAGES = [
  'sns',
  'dynamo',
  'mq',
]

antipode_lambda = local["./antipode_lambda"]
for writer_region in WRITER_REGIONS:
  for reader_region in READER_REGIONS:
    for post_storage in POST_STORAGES:
      for notification_storage in NOTIFICATION_STORAGES:
        print('[INFO] New deployment starting:')
        print(f"\t > writer region: {writer_region} // reader region: {reader_region}")
        print(f"\t > app: {post_storage.upper()}-{notification_storage.upper()}\n")

        antipode_lambda['build',
            '--post-storage', post_storage,
            '--notification-storage', notification_storage,
            '--writer', writer_region,
            '--reader', reader_region,
          ] & FG

        # preemptive clean just to make sure everything is indeed clean
        antipode_lambda['clean'] & FG

        # main culprit of this sleep is DYNAMO
        time.sleep(60)

        antipode_lambda['run',
            '--requests', REQUESTS,
          ] & FG

        antipode_lambda['gather',
            '-t', f"{writer_region}-{reader_region}__{REQUESTS}",
          ] & FG

        antipode_lambda['clean', '--strong'] & FG
        print('[INFO] Done!\n')