#!/usr/bin/env python3

from plumbum import FG, BG
from plumbum import local
import time

REQUESTS = 1000
#--------------
COMBINATIONS = {
  # (writer_region , reader_region, post_storage, notification_storage) : [ delay_0, ... delay_n]
  # e.g. ('eu', 'us', 'mysql',    'sns') : [ 1100, 1200, 1300, 1400, 1500 ]
}

antipode_lambda = local["./antipode_lambda"]
for (writer_region, reader_region, post_storage, notification_storage),delays in COMBINATIONS.items():
  print('[INFO] New deployment starting:')
  print(f"\t > writer region: {writer_region} // reader region: {reader_region}")
  print(f"\t > app: {post_storage.upper()}-{notification_storage.upper()}\n")

  for delay in delays:
    antipode_lambda['build',
        '--post-storage', post_storage,
        '--notification-storage', notification_storage,
        '--writer', writer_region,
        '--reader', reader_region,
        '--delay', delay,
      ] & FG

    # preemptive clean just to make sure everything is indeed cleaned
    antipode_lambda['clean'] & FG
    # main culprit of this sleep is mostly DYNAMO
    time.sleep(60)

    antipode_lambda['run',
        '--requests', REQUESTS,
      ] & FG

    antipode_lambda['gather',
        '-t', f"{writer_region}-{reader_region}__{REQUESTS}__delay-{delay}ms",
      ] & FG

  antipode_lambda['clean', '--strong'] & FG
  print('\n[INFO] Done!')